name: Deploy Auth Service

on:
  push:
    branches:
      - main

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      # 1. Клонування репозиторію
      - name: Checkout repo
        uses: actions/checkout@v4

      # 2. Налаштування SSH з ключа
      - name: Set up SSH
        run: |
          mkdir -p ~/.ssh
          echo "${{ secrets.PRIVATE_KEY }}" > ~/.ssh/id_ed25519
          chmod 600 ~/.ssh/id_ed25519
          ssh-keyscan -H ${{ secrets.HOST }} >> ~/.ssh/known_hosts

      # 3. Перевірка підключення до сервера
      - name: Test SSH connection
        run: |
          ssh -o StrictHostKeyChecking=no -i ~/.ssh/id_ed25519 ${{ secrets.USERNAME }}@${{ secrets.HOST }} "echo '✅ SSH connection works'"

      # 4.Збірка JAR
      - name: Build project
        run: ./mvnw clean package -DskipTests

      # 5. Підготовка deploy-папки
      - name: Prepare deploy folder
        run: |
          mkdir deploy
          cp -r target deploy/
          cp docker-compose.yml deploy/
          cp Dockerfile deploy/

      # 6. Копіювання на сервер через rsync
      - name: Copy files to droplet
        run: |
          rsync -avz --delete -e "ssh -i ~/.ssh/id_ed25519 -o StrictHostKeyChecking=no" ./deploy/ ${{ secrets.USERNAME }}@${{ secrets.HOST }}:/root/auth-service

      # 7. Деплой на сервері
      - name: Run docker compose on server
        run: |
          ssh -o StrictHostKeyChecking=no -i ~/.ssh/id_ed25519 ${{ secrets.USERNAME }}@${{ secrets.HOST }} << 'EOF'
            cd /root/auth-service

            echo "SPRING_DATASOURCE_URL=${{ secrets.ENV_SPRING_DATASOURCE_URL }}" > .env
            echo "SPRING_DATASOURCE_USERNAME=${{ secrets.ENV_SPRING_DATASOURCE_USERNAME }}" >> .env
            echo "SPRING_DATASOURCE_PASSWORD=${{ secrets.ENV_SPRING_DATASOURCE_PASSWORD }}" >> .env
            echo "JWT_SECRET=${{ secrets.ENV_JWT_SECRET }}" >> .env

            docker compose down
            docker compose up -d --build
          EOF