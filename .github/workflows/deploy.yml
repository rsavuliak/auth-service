name: Build and Deploy

on:
  push:
    branches: [main]

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      # 1. Клонування коду
      - name: Checkout code
        uses: actions/checkout@v4

      # 2. JDK 17 для збірки
      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'temurin'

      # 3. Збірка .jar
      - name: Build JAR
        run: ./mvnw clean package -DskipTests

      # 4. Підготовка папки deploy/
      - name: Prepare deploy folder
        run: |
          mkdir deploy
          cp -r target deploy/
          cp docker-compose.yml deploy/
          cp Dockerfile deploy/

      # 5. Копіювання файлів на сервер через SCP
      - name: Copy deploy files to server
        uses: appleboy/scp-action@v0.1.7
        continue-on-error: true
        with:
          host: ${{ secrets.HOST }}
          username: ${{ secrets.USERNAME }}
          key: ${{ secrets.PRIVATE_KEY }}
          port: ${{ secrets.PORT }}
          source: "deploy"
          target: "/root/auth-service"
          rm: false

      # 6. Деплой на сервері: створити .env, перезапустити Docker
      - name: Deploy on server
        uses: appleboy/ssh-action@v1.0.0
        with:
          host: ${{ secrets.HOST }}
          username: ${{ secrets.USERNAME }}
          key: ${{ secrets.PRIVATE_KEY }}
          port: ${{ secrets.PORT }}
          script: |
            cd /root/auth-service

            # 🔐 Створити .env з GitHub Secrets
            echo "SPRING_DATASOURCE_URL=${{ secrets.ENV_SPRING_DATASOURCE_URL }}" > .env
            echo "SPRING_DATASOURCE_USERNAME=${{ secrets.ENV_SPRING_DATASOURCE_USERNAME }}" >> .env
            echo "SPRING_DATASOURCE_PASSWORD=${{ secrets.ENV_SPRING_DATASOURCE_PASSWORD }}" >> .env
            echo "JWT_SECRET=${{ secrets.ENV_JWT_SECRET }}" >> .env

            # 🐳 Перезапуск Docker Compose
            docker compose down
            docker compose up -d --build